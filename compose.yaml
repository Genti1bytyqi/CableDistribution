services:
  proxy:
    image: traefik
    container_name: traefik-gentrit
    restart: unless-stopped
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.constraints=Label(`traefik.instance`, `traefik-gentrit`)"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=freemyip"
      - "--certificatesresolvers.letsencrypt.acme.email=mail@mail.com"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.disablePropagationCheck=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=:80"
    volumes:
      - "../data/traefik/letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.rule=Host(`${MY_DOMAIN}`)'
      - 'traefik.http.routers.api.entryPoints=web'
      - 'traefik.http.routers.api.service=api@internal'
    ports:
      #- "443:443"
      - "80:80"
    environment:
      FREEMYIP_TOKEN: "${FREEMYIP_TOKEN}"
    mem_limit: 100m
    memswap_limit: 1024m
    networks:
      - traefik-gentrit
      - default
  
  node-app:
    container_name: "cable-distribuition"
    build: .
    ports:
      - "3000:3000"
    labels:
      - 'traefik.instance=traefik-gentrit'
      - 'traefik.enable=true'
      - 'traefik.http.routers.frontend.rule=Host(`cable-optimizer.${MY_DOMAIN}`)'
      - 'traefik.http.routers.frontend.entryPoints=web'
    restart: always
    networks:
      - traefik-gentrit

networks:
  traefik-gentrit:
    external: true
